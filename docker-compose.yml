services:
  myproject:
    build:
      context: .
    ports:
      - '8000:8000'
    volumes:
      - .:/myproject
    entrypoint: [ 'python', 'manage.py' ]
    command: [ 'runserver', '0.0.0.0:8000', '--settings=config.settings.local' ]
    env_file:
      - .env_dev
    depends_on:
      - database
      - worker
      - flower
      - redis
      - celery_beats
    restart: always

  database:
    image: postgres:16.1-alpine3.18
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env_dev
    ports:
      - '5432:5432'
    restart: always

  redis:
    image: redis:7.2.3-alpine3.18
    ports:
      - '6379:6379'
    restart: always

  worker:
    build:
      context: .
    volumes:
      - ./src/media:/myproject/src/media
    entrypoint: [ 'celery' ]
    command: [ '--workdir=/myproject', '-A', 'config', 'worker', '-l', 'INFO' ]
    env_file:
      - .env_dev
    depends_on:
      - redis
      - flower
      - database
    restart: always

  celery_beats:
    build:
      context: .
    entrypoint: [ 'celery' ]
    command: [ '--workdir=/myproject', '-A', 'config', 'beat', '-l', 'INFO', '--scheduler', 'django_celery_beat.schedulers:DatabaseScheduler' ]
    env_file:
      - .env_dev
    depends_on:
      - redis
      - flower
      - database
      - worker
    restart: always

  flower:
    build:
      context: .
    entrypoint: [ 'celery' ]
    command: [ '-A', 'config.celery.app', 'flower' ]
    depends_on:
      - redis
    ports:
      - "5555:5555"

volumes:
  postgres-data:



