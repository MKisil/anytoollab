services:
  myproject:
    build:
      context: .
    volumes:
      - .:/usr/src/app
      - static:/usr/src/app/static
      - media:/usr/src/app/media
    env_file:
      - .env_dev
#      - .env
    ports:
      - '$HTTP_PORT:8000'
      - '$WS_PORT:8001'
    depends_on:
      database:
        condition: service_healthy
      celery_worker:
        condition: service_started
      redis:
        condition: service_started
      celery_beats:
        condition: service_started
    restart: always

  database:
    image: postgres:16.1-alpine3.18
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env_dev
 #     - .env
    ports:
      - '$DB_PORT:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:7.2.3-alpine3.18
    env_file:
      - .env_dev
   #   - .env
    ports:
      - '$REDIS_PORT:6379'
    restart: always

  celery_worker:
    build: .
    volumes:
      - .:/usr/src/app
      - media:/usr/src/app/media
    env_file:
      - .env_dev
   #   - .env
    entrypoint: [ './entrypoint_celery.sh' ]
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always

  celery_beats:
    build: .
    env_file:
      - .env_dev
   #   - .env
    entrypoint: [ './entrypoint_celery_beats.sh' ]
    depends_on:
      database:
        condition: service_healthy
      celery_worker:
        condition: service_started
      redis:
        condition: service_started
    restart: always

  nginx:
    build: ./nginx
    env_file:
      - .env_dev
   #   - .env
    volumes:
      - static:/static
      - media:/media
    ports:
      - "$NGINX_PORT:80"
    depends_on:
      - myproject

volumes:
  postgres-data:
  static:
  media: